name: CI

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres
        env:
          # Note:
          # The Postgres service fails its docker health check unless you
          # specify these environment variables
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nzsl_test
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      ##
      # Cache Yarn modules
      #
      # See https://github.com/actions/cache/blob/master/examples.md#node---yarn for details
      #
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install required OS packages
        run: |
          sudo apt-get -y install libpq-dev google-chrome-stable

      - name: Install NodeJS
        uses: actions/setup-node@v2-beta
        with:
          node-version: '12'

      - name: Install Ruby (version given by .ruby-version) and Bundler
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Install required JS packages
        run: |
          yarn install

      - name: Setup CodeClimate Reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build

      - name: Prepare app for testing
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/nzsl_test
          DEVISE_SECRET_KEY: anything
          RAILS_ENV: test
        run: |
          # bundle install --jobs 4 --retry 3
          bundle exec rails db:prepare

      - name: Run JS linting
        run: |
          npm run eslint

      - name: Run Ruby static analysis
        run: |
          gem install --no-document brakeman
          brakeman --run-all-checks --exit-on-warn --format plain .

      - name: Run Ruby linting
        run: |
          bundle exec rubocop -D

      - name: Run ruby specs
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/nzsl_test
          DEVISE_SECRET_KEY: anything
          PERCY_TARGET_BRANCH: staging
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
        run: |
          npx percy exec -- bundle exec rspec spec

      # - name: Report results to CodeClimate
      #   run: |
      #     ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT
