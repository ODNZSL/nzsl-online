name: CI

on:
  pull_request:
  push:
    branches:
      - main
      - production
jobs:
  rubocop:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v2
      - name: Install Ruby (version given by .ruby-version) and Bundler
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Run Ruby linting
        run: bundle exec rubocop -D
  brakeman:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v2
      - name: Install Ruby (version given by .ruby-version) and Bundler
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Run Ruby static analysis
        run: bundle exec brakeman --run-all-checks --exit-on-warn --format plain .

  eslint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v2
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'

      - name: Install required JS packages
        run: yarn install
      - name: Run JS linting
        run: npm run eslint

  rspec:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres
        env:
          ##
          # The Postgres service fails its docker health check unless you
          # specify these environment variables
          #
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nzsl_test
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout this repo
        uses: actions/checkout@v2

      - name: Install required OS packages
        run: |
          sudo apt-get -y install libpq-dev google-chrome-stable

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'

      - name: Install Ruby (version given by .ruby-version) and Bundler
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Install required JS packages
        run: |
          yarn install

      - name: Prepare database for testing
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/nzsl_test
          DEVISE_SECRET_KEY: anything
          AWS_REGION: ap-southeast-2
          RAILS_ENV: test
        run: |
          cp env-example .env
          bundle exec rails db:prepare

      - name: Run rspec
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/nzsl_test
          DEVISE_SECRET_KEY: anything
          NZSL_ONLINE_SECRET_KEY_BASE: anything
          AWS_REGION: ap-southeast-2
          S3_BUCKET_URL: http://s3-ap-southeast-2.amazonaws.com/dummy-fake/
        run: |
          cp env-example .env
          bundle exec rspec spec
